- hosts: localhost
  connection: local
  gather_facts: False
  tasks:
    - name: Import VPC Variables
      include_vars: /home/shrikant/play/ansible

    - name: Create VPC
      ec2_vpc_net:
        name: "{{vpc_name}}"
        cidr_block: "{{vpcCidr}}"
        region: "{{region}}"
        dns_support: yes
        dns_hostnames: yes
        tenancy: default
        state: "{{state}}"
      register: vpcout

    - name: Create Public Subnet 1 in zone1
      ec2_vpc_subnet:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region}}"
        az: "{{zone1}}"
        state: "{{state}}"
        cidr: "{{PubSub1Cidr}}"
        map_public: yes
        resource_tags:
          Name: pubsub1
      register: pubsub1_out

    - name: Create Public Subnet 2 in zone3
      ec2_vpc_subnet:  # module
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region}}"
        az: "{{zone2}}"
        state: "{{state}}"
        cidr: "{{PubSub2Cidr}}"
        map_public: yes   # ec2 instances initialized in this subnet will get the public ip 
        resource_tags:
          Name: pubsub2
      register: pubsub2_out

    - name: Create Public Subnet 3 in zone3
      ec2_vpc_subnet:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region}}"
        az: "{{zone3}}"
        state: "{{state}}"
        cidr: "{{PubSub3Cidr}}"
        map_public: yes
        resource_tags:
          Name: pubsub3
      register: pubsub3_out

    - name: Create Private Subnet 1 in zone1
      ec2_vpc_subnet:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region}}"
        az: "{{zone1}}"
        state: "{{state}}"
        cidr: "{{PrivSub1Cidr}}"
        resource_tags:
          Name: privsub1
      register: privsub1_out      

    - name: Create Private Subnet 2 in zone2
      ec2_vpc_subnet:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region}}"
        az: "{{zone2}}"
        state: "{{state}}"
        cidr: "{{PrivSub2Cidr}}"
        resource_tags:
          Name: privsub2
      register: privsub2_out

    - name: Create Private Subnet 3 in zone3
      ec2_vpc_subnet:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region}}"
        az: "{{zone3}}"
        state: "{{state}}"
        cidr: "{{PrivSub3Cidr}}"
        resource_tags:
          Name: privsub3
      register: privsub3_out

    - name: Internet Gateway Setup 
      ec2_vpc_igw:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region}}"
        state: "{{state}}"
        resource_tags:
          Name: igw
      register: igw_out

    - name: Set route table for public subnet
      ec2_vpc_route_table:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region}}"
        tags:
          Name: public-rt
        subnets:
          - "{{ pubsub1_out.subnet.id }}"  
          - "{{ pubsub2_out.subnet.id }}"
          - "{{ pubsub3_out.subnet.id }}"
        routes:
          - dest: 0.0.0.0/0
            gateway_id: "{{ igw_out.gateway_id }}"
      register: public-rt_out


    - name: Create nat gateway and allocate new EIP if nat gateway does not yet exist in the vpc
      ec2_vpc_nat_gateway:
        state: "{{state}}"
        subnet_id: "{{pubsub1_out.subnet.id}}"
        wait: yes # will wait for the nat gateway to get created
        region: "{{region}}"
        if_exist_does_not_create: true
      register: natgw_out

    - name : Set up route table for private subnet
      ec2_vpc_route_table:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region}}"
        tags:
          Name: private-rt
        subnets:
          - "{{ privsub1_out.subnet.id }}"  
          - "{{ privsub2_out.subnet.id }}"
          - "{{ privsub3_out.subnet.id }}"
        routes:
          - dest: 0.0.0.0/0
            gateway_id: "{{ natgw_out.nat_gateway_id }}"
      register: private-rt_out

    - debug:
        var: "{{items}}"
      loop:
        - vpcout.vpc.id
        - pubsub1_out.subnet.id
        - pubsub2_out.subnet.id
        - pubsub3_out.subnet.id
        - privsub1_out.subnet.id
        - privsub2_out.subnet.id
        - privsub3_out.subnet.id
        - igw_out.gateway_id
        - public-rt_out.route_table_id
        - natgw_out.nat_gateway_id
        - private-rt_out.route_table_id

    - set_facts:
        vpcid: "{{vpcout.vpc.id}}"
        pubsub1id: "{{pubsub1_out.subnet.id}}"
        pubsub2id: "{{pubsub2_out.subnet.id}}"
        pubsub3id: "{{pubsub3_out.subnet.id}}"
        privsub1id: "{{privsub1_out.subnet.id}}"
        privsub2id: "{{privsub2_out.subnet.id}}"
        privsub3id: "{{privsub3_out.subnet.id}}"
        igwid: "{{igw_out.gateway_id}}"
        pubrtid: "{{public-rt_out.route_table_id}}"
        natgwid: "{{natgw_out.nat_gateway_id}}"
        privrtid: "{{private-rt_out.route_table_id}}"
        cacheable: yes

    - name: Create var files for vpc output
      copy:
        content: "vpcid: {{vpcout.vpc.id}}\npubsub2id: {{pubsub2_out.subnet.id}}\npubsub3id: {{pubsub3_out.subnet.id}}\nprivsub1id: {{privsub1_out.subnet.id}}\nprivsub2id: {{privsub2_out.subnet.id}}\nprivsub3id: {{privsub3_out.subnet.id}}\n igwid: {{igw_out.gateway_id}}\npubrtid: {{public-rt_out.route_table_id}}\nnatgwid: {{natgw_out.nat_gateway_id}}\nprivrtid: {{private-rt_out.route_table_id}}"
        dest: /home/shrikant/play/ansible/output_vars


